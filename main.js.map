{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/engine/engine.component.ts","./src/app/components/engine/engine.component.html","./src/app/components/engine/engine.service.ts","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/mock/document.mock.ts","./src/app/mock/storage.mock.ts","./src/app/mock/window.mock.ts","./src/app/services/window-ref.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent {}\r\n","<div class=\"ui-wrapper\">\r\n  <app-menu></app-menu>\r\n</div>\r\n<app-engine></app-engine>\r\n","import { WindowRefService } from './services/window-ref.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { EngineComponent } from './components/engine/engine.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EngineComponent,\r\n    MenuComponent,\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule\r\n  ],\r\n  providers: [\r\n    WindowRefService\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { EngineService } from './engine.service';\r\n\r\n@Component({\r\n  selector: 'app-engine',\r\n  templateUrl: './engine.component.html'\r\n})\r\nexport class EngineComponent implements OnInit {\r\n\r\n  @ViewChild('rendererCanvas', { static: true })\r\n  public rendererCanvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  public constructor(private engServ: EngineService) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.engServ.createScene(this.rendererCanvas);\r\n    this.engServ.animate();\r\n  }\r\n}\r\n","<div class=\"engine-wrapper\">\r\n  <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\r\n</div>\r\n","import { WindowRefService } from '../../services/window-ref.service';\r\nimport { ElementRef, Injectable, NgZone } from '@angular/core';\r\nimport {\r\n  Engine,\r\n  ArcRotateCamera,\r\n  Scene,\r\n  Light,\r\n  Mesh,\r\n  Color3,\r\n  Color4,\r\n  Vector3,\r\n  HemisphericLight,\r\n  StandardMaterial,\r\n  Texture,\r\n  DynamicTexture,\r\n  Space,\r\n  Matrix,\r\n  VertexData,\r\n  MeshBuilder\r\n} from '@babylonjs/core';\r\nimport { GridMaterial } from '@babylonjs/materials';\r\nimport * as WebIFC from 'web-ifc';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EngineService {\r\n  private canvas: HTMLCanvasElement;\r\n  private engine: Engine;\r\n  private camera: ArcRotateCamera;\r\n  private scene: Scene;\r\n  private light: Light;\r\n\r\n  private sphere: Mesh;\r\n\r\n  private ifcapi = new WebIFC.IfcAPI();\r\n\r\n\r\n  public constructor(\r\n    private ngZone: NgZone,\r\n    private windowRef: WindowRefService\r\n  ) {\r\n    this.ifcapi.SetWasmPath(\"./assets/wasm/\");\r\n  }\r\n\r\n  public createScene(canvas: ElementRef<HTMLCanvasElement>): void {\r\n    // The first step is to get the reference of the canvas element from our HTML document\r\n    this.canvas = canvas.nativeElement;\r\n\r\n    // Then, load the Babylon 3D engine:\r\n    this.engine = new Engine(this.canvas, true);\r\n\r\n    // シーンを作成 create a basic BJS Scene object\r\n    this.scene = new Scene(this.engine);\r\n    this.scene.clearColor = new Color4(255, 255, 255, 0);\r\n\r\n    // カメラを作成 create a FreeCamera, and set its position to (x:5, y:10, z:-20 )\r\n    this.camera = new ArcRotateCamera('camera1', -Math.PI / 2, Math.PI / 2.5, 3, new Vector3(5, 10, -20), this.scene);\r\n\r\n    // target the camera to scene origin\r\n    this.camera.setTarget(Vector3.Zero());\r\n\r\n    // ユーザからの入力でカメラをコントロールするため、カメラをキャンバスにアタッチ\r\n    this.camera.attachControl(this.canvas, false);\r\n\r\n    // ライトを作成 create a basic light, aiming 0,1,0 - meaning, to the sky\r\n    this.light = new HemisphericLight('light1', new Vector3(0, 100, 0), this.scene);\r\n\r\n    // 床を生成 create a Ground\r\n    const ground = MeshBuilder.CreateGround(\"ground\", {width: 100, height: 100}, this.scene);    \r\n    const groundMaterial = new GridMaterial(\"groundMaterial\", this.scene);\r\n    groundMaterial.majorUnitFrequency = 5;\r\n    groundMaterial.minorUnitVisibility = 0.45;\r\n    groundMaterial.gridRatio = 0.5;\r\n    groundMaterial.mainColor = new Color3(0, 0.05, 0.2);\r\n    groundMaterial.lineColor = new Color3(0, 1.0, 1.0);\r\n    groundMaterial.opacity = 0.98;\r\n\r\n    ground.position.y = 0;\r\n    ground.material = groundMaterial;\r\n    ground.material.wireframe = false;\r\n \r\n    // simple rotation along the y axis\r\n    this.scene.registerAfterRender(() => {\r\n      /*\r\n      this.sphere.rotate(\r\n        new Vector3(0, 1, 0),\r\n        0.02,\r\n        Space.LOCAL\r\n      );\r\n      */\r\n    });\r\n\r\n    // generates the world x-y-z axis for better understanding\r\n    this.showWorldAxis(8);\r\n  }\r\n\r\n  public animate(): void {\r\n    // We have to run this outside angular zones,\r\n    // because it could trigger heavy changeDetection cycles.\r\n    this.ngZone.runOutsideAngular(() => {\r\n      const rendererLoopCallback = () => {\r\n        this.scene.render();\r\n      };\r\n\r\n      if (this.windowRef.document.readyState !== 'loading') {\r\n        this.engine.runRenderLoop(rendererLoopCallback);\r\n      } else {\r\n        this.windowRef.window.addEventListener('DOMContentLoaded', () => {\r\n          this.engine.runRenderLoop(rendererLoopCallback);\r\n        });\r\n      }\r\n\r\n      this.windowRef.window.addEventListener('resize', () => {\r\n        this.engine.resize();\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * creates the world axes\r\n   *\r\n   * Source: https://doc.babylonjs.com/snippets/world_axes\r\n   *\r\n   * @param size number\r\n   */\r\n  public showWorldAxis(size: number): void {\r\n\r\n    const makeTextPlane = (text: string, color: string, textSize: number) => {\r\n      const dynamicTexture = new DynamicTexture('DynamicTexture', 50, this.scene, true);\r\n      dynamicTexture.hasAlpha = true;\r\n      dynamicTexture.drawText(text, 5, 40, 'bold 36px Arial', color, 'transparent', true);\r\n      const plane = Mesh.CreatePlane('TextPlane', textSize, this.scene, true);\r\n      const material = new StandardMaterial('TextPlaneMaterial', this.scene);\r\n      material.backFaceCulling = false;\r\n      material.specularColor = new Color3(0, 0, 0);\r\n      material.diffuseTexture = dynamicTexture;\r\n      plane.material = material;\r\n\r\n      return plane;\r\n    };\r\n\r\n    const axisX = Mesh.CreateLines(\r\n      'axisX',\r\n      [\r\n        Vector3.Zero(),\r\n        new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0),\r\n        new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)\r\n      ],\r\n      this.scene,\r\n      true\r\n    );\r\n\r\n    axisX.color = new Color3(1, 0, 0);\r\n    const xChar = makeTextPlane('X', 'red', size / 10);\r\n    xChar.position = new Vector3(0.9 * size, -0.05 * size, 0);\r\n\r\n    const axisY = Mesh.CreateLines(\r\n      'axisY',\r\n      [\r\n        Vector3.Zero(),\r\n        new Vector3(0, size, 0), new Vector3(-0.05 * size, size * 0.95, 0),\r\n        new Vector3(0, size, 0), new Vector3(0.05 * size, size * 0.95, 0)\r\n      ],\r\n      this.scene,\r\n      true\r\n    );\r\n\r\n    axisY.color = new Color3(0, 1, 0);\r\n    const yChar = makeTextPlane('Y', 'green', size / 10);\r\n    yChar.position = new Vector3(0, 0.9 * size, -0.05 * size);\r\n\r\n    const axisZ = Mesh.CreateLines(\r\n      'axisZ',\r\n      [\r\n        Vector3.Zero(),\r\n        new Vector3(0, 0, size), new Vector3(0, -0.05 * size, size * 0.95),\r\n        new Vector3(0, 0, size), new Vector3(0, 0.05 * size, size * 0.95)\r\n      ],\r\n      this.scene,\r\n      true\r\n    );\r\n\r\n    axisZ.color = new Color3(0, 0, 1);\r\n    const zChar = makeTextPlane('Z', 'blue', size / 10);\r\n    zChar.position = new Vector3(0, 0.05 * size, 0.9 * size);\r\n  }\r\n\r\n\r\n\r\n\r\n  //#region IFCからメッシュの読み込み\r\n  public async loadIFCFile(buffer: Uint8Array){\r\n      await this.ifcapi.Init();\r\n      const modelID = this.ifcapi.OpenModel(buffer)\r\n      this.createMesh(modelID)\r\n      // アニメーションさせる場合\r\n      this.createMeshAnimation(modelID)\r\n  }\r\n\r\n    // メッシュの作成\r\n    private createMesh(modelID: number) {\r\n      this.ifcapi.StreamAllMeshes(modelID, (mesh) => this.loadMesh(modelID, mesh))\r\n    }\r\n  // アニメーションをさせてメッシュを作成\r\n  private createMeshAnimation(modelID: number) {\r\n    if (this.scene === null) return\r\n\r\n    // すべてのメッシュを同期取得\r\n    let meshData = []\r\n    const meshes = this.ifcapi.LoadAllGeometry(modelID)\r\n    for (let i = 0; i < meshes.size(); i++) {\r\n      const mesh = meshes.get(i)\r\n      for(const geometry of this.loadGeometry(modelID, mesh)){\r\n        meshData.push(geometry)\r\n      }\r\n    }\r\n\r\n    // 表示順のソート設定\r\n    meshData = meshData.map(v => {\r\n      let posy = 100000\r\n      for (let i = 0; i < v.vertexData.positions.length; i += 3) {\r\n        posy = Math.min(posy, v.vertexData.positions[i + 2])\r\n      }\r\n      return { ...v, sortKey: v.flatTransformation[13] + posy }\r\n    })\r\n    meshData.sort((a, b) => a.sortKey - b.sortKey)\r\n\r\n    // 10秒かけて表示されるように\r\n    const msec = 10000 / meshData.length\r\n    meshData.forEach((v, i) => {\r\n      setTimeout(() => {\r\n        this.ifc2babylonMesh(this.scene, v.vertexData, v.flatTransformation, v.color)\r\n      }, msec * i);\r\n    })\r\n  }\r\n\r\n  // IFCからメッシュの読み込み\r\n  private loadMesh(modelID: number, mesh: WebIFC.FlatMesh) {\r\n    if (this.scene === null) return;\r\n\r\n    // IFCからBabylon.jsのメッシュを構築\r\n    for(const geometry of this.loadGeometry(modelID, mesh)){\r\n      this.ifc2babylonMesh(\r\n        this.scene,\r\n        geometry.vertexData,\r\n        geometry.flatTransformation,\r\n        geometry.color\r\n      )\r\n    }\r\n  }\r\n\r\n  // IFCからメッシュ情報を取得するジェネレータ\r\n  private* loadGeometry(modelID: number, mesh: WebIFC.FlatMesh) {\r\n    const placedGeometries = mesh.geometries;\r\n    const size = placedGeometries.size();\r\n    for (let i = 0; i < size; i++) {\r\n      const placedGeometry = placedGeometries.get(i)\r\n      const geometry = this.ifcapi.GetGeometry(modelID, placedGeometry.geometryExpressID);\r\n      // 6つで一組のデータ： x, y, z, normalx, normaly, normalz\r\n      const verts = this.ifcapi.GetVertexArray(geometry.GetVertexData(), geometry.GetVertexDataSize());\r\n      // 3つで一組のデータ：頂点index 1, 2, 3\r\n      const indices = this.ifcapi.GetIndexArray(geometry.GetIndexData(), geometry.GetIndexDataSize());\r\n\r\n      // 頂点の座標と法線を分離\r\n      const positions = [];\r\n      const normals = [];\r\n      for (let i = 0; i < verts.length; i += 6) {\r\n        positions.push(verts[i], verts[i + 1], verts[i + 2]);\r\n        normals.push(verts[i + 3], verts[i + 4], verts[i + 5]);\r\n      }\r\n\r\n      const vertexData = {\r\n        positions: positions,\r\n        normals: normals,\r\n        indices: Array.from(indices),\r\n      }\r\n\r\n      // 頂点と変形行列と色情報を返す\r\n      const geometoryData = {\r\n        vertexData: vertexData,\r\n        flatTransformation: placedGeometry.flatTransformation,\r\n        color: placedGeometry.color,\r\n      };\r\n\r\n      yield geometoryData;\r\n    }\r\n  }\r\n\r\n  // IFCの形状情報からBabylon.jsのメッシュを作成\r\n  private ifc2babylonMesh(\r\n    scene: Scene,\r\n    vertexData: { positions: number[], normals: number[], indices: number[] },\r\n    flatTransformation: number[],\r\n    color: { x: number, y: number, z: number, w: number },\r\n  ) {\r\n    // メッシュ作成\r\n    const mesh = this.createMeshFromData(scene, vertexData)\r\n\r\n    // メッシュの移動・変形\r\n    const transformationMatrix = Matrix.FromArray(flatTransformation);\r\n    mesh.setPivotMatrix(transformationMatrix, false);\r\n\r\n    // 奥行きZの左手系に\r\n    mesh.scaling.z *= -1;\r\n\r\n    // 面を反転\r\n    mesh.flipFaces(true);\r\n\r\n    // 色設定\r\n    const { x, y, z, w } = color\r\n    const material = new StandardMaterial(\"material\", scene);\r\n    material.diffuseColor = new Color3(x, y, z);\r\n    material.alpha = w\r\n    material.backFaceCulling = false;\r\n    mesh.material = material;\r\n  }\r\n\r\n  // 頂点データ化からメッシュ作成\r\n  private createMeshFromData(scene: Scene, vertexData: { positions: number[], normals: number[], indices: number[] }) {\r\n    const mesh = new Mesh(\"mesh\", scene);\r\n    const vertexDataForBabylon = new VertexData();\r\n    vertexDataForBabylon.positions = vertexData.positions;\r\n    vertexDataForBabylon.normals = vertexData.normals;\r\n    vertexDataForBabylon.indices = vertexData.indices;\r\n    vertexDataForBabylon.applyToMesh(mesh);\r\n    return mesh;\r\n  }\r\n  //#endregion\r\n\r\n}\r\n","import {Component} from '@angular/core';\r\nimport { EngineService } from '../engine/engine.service';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss'],\r\n})\r\nexport class MenuComponent {\r\n\r\n  public constructor(private engServ: EngineService) { }\r\n\r\n  // ファイルを開く\r\n  public open(event) {\r\n\r\n    const file = (event.target.files as FileList)[0];\r\n    if (file) {\r\n      this.loadIFCFile(file);\r\n    }\r\n    event.target.value = \"\";\r\n\r\n  }\r\n\r\n  // IFCファイルの読み込み\r\n  public loadIFCFile(file: File) {\r\n    const reader = new FileReader();\r\n    reader.onload = async (event) => {\r\n      const buffer = new Uint8Array(event.target?.result as ArrayBuffer)\r\n      await this.engServ.loadIFCFile(buffer);\r\n    };\r\n    reader.readAsArrayBuffer(file);\r\n  }\r\n\r\n}\r\n","<mat-toolbar>\r\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Example icon-button with a menu\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n\r\n    <button mat-menu-item>\r\n      <label>\r\n        <mat-icon>more_vert</mat-icon>\r\n        <span>ファイルを選択</span>\r\n        <input type=\"file\" style=\"display: none\"  (change)=\"open($event)\" file-handler>\r\n      </label>\r\n    </button>\r\n\r\n    <button mat-menu-item disabled>\r\n      <mat-icon>voicemail</mat-icon>\r\n      <span>Check voice mail</span>\r\n    </button>\r\n\r\n    <button mat-menu-item>\r\n      <mat-icon>notifications_off</mat-icon>\r\n      <span>Disable alerts</span>\r\n    </button>\r\n  </mat-menu>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  <span>My App</span>\r\n  <span class=\"example-spacer\"></span>\r\n  <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\r\n    <mat-icon>favorite</mat-icon>\r\n  </button>\r\n  <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\r\n    <mat-icon>share</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n","export class DocumentMock extends Document {\r\n  public override readyState: DocumentReadyState = 'loading';\r\n}\r\n","export class StorageMock implements Storage {\r\n  public length = 0;\r\n  public clear(): void { return null; }\r\n  public getItem(key: string): string { return null; }\r\n  public key(index: number): string { return null; }\r\n  public removeItem(key: string): void { return null; }\r\n  public setItem(key: string, value: string): void { return null; }\r\n}\r\n","import { DocumentMock } from './document.mock';\r\nimport { StorageMock } from './storage.mock';\r\n\r\nexport class WindowMock extends Window {\r\n  public override document = new DocumentMock();\r\n  public override localStorage = new StorageMock();\r\n  public override sessionStorage = new StorageMock();\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { WindowMock } from '../mock/window.mock';\r\n\r\nconst getWindow = (): Window => window != null ? window : new WindowMock();\r\n\r\n@Injectable()\r\nexport class WindowRefService {\r\n  private readonly windowObject: Window;\r\n\r\n  public constructor() {\r\n    this.windowObject = getWindow();\r\n  }\r\n\r\n  public get window(): Window {\r\n    return this.windowObject;\r\n  }\r\n\r\n  public get document(): Document {\r\n    return this.window.document;\r\n  }\r\n\r\n  public get localStore(): Storage {\r\n    return this.window.localStorage;\r\n  }\r\n\r\n  public get sessionStorage(): Storage {\r\n    return this.window.sessionStorage;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nimport packageInfo from 'package.json';\r\n\r\nexport const environment = {\r\n  production: false,\r\n  version: packageInfo.version\r\n};\r\n","import {enableProdMode, ViewEncapsulation} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, [{\r\n  defaultEncapsulation: ViewEncapsulation.None\r\n}]).catch(err => console.log(err));\r\n"],"names":["AppComponent","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","WindowRefService","FormsModule","BrowserModule","BrowserAnimationsModule","MatToolbarModule","MatIconModule","MatButtonModule","MatMenuModule","EngineComponent","MenuComponent","AppModule","bootstrap","imports","declarations","engServ","rendererCanvas","constructor","ngOnInit","createScene","animate","ɵɵdirectiveInject","i1","EngineService","viewQuery","EngineComponent_Query","Engine","ArcRotateCamera","Scene","Mesh","Color3","Color4","Vector3","HemisphericLight","StandardMaterial","DynamicTexture","Matrix","VertexData","MeshBuilder","GridMaterial","WebIFC","ngZone","windowRef","canvas","engine","camera","scene","light","sphere","ifcapi","IfcAPI","SetWasmPath","nativeElement","clearColor","Math","PI","setTarget","Zero","attachControl","ground","CreateGround","width","height","groundMaterial","majorUnitFrequency","minorUnitVisibility","gridRatio","mainColor","lineColor","opacity","position","y","material","wireframe","registerAfterRender","showWorldAxis","runOutsideAngular","rendererLoopCallback","render","document","readyState","runRenderLoop","window","addEventListener","resize","size","makeTextPlane","text","color","textSize","dynamicTexture","hasAlpha","drawText","plane","CreatePlane","backFaceCulling","specularColor","diffuseTexture","axisX","CreateLines","xChar","axisY","yChar","axisZ","zChar","loadIFCFile","buffer","_this","_asyncToGenerator","Init","modelID","OpenModel","createMesh","createMeshAnimation","StreamAllMeshes","mesh","loadMesh","meshData","meshes","LoadAllGeometry","i","get","geometry","loadGeometry","push","map","v","posy","vertexData","positions","length","min","sortKey","flatTransformation","sort","a","b","msec","forEach","setTimeout","ifc2babylonMesh","placedGeometries","geometries","placedGeometry","GetGeometry","geometryExpressID","verts","GetVertexArray","GetVertexData","GetVertexDataSize","indices","GetIndexArray","GetIndexData","GetIndexDataSize","normals","Array","from","geometoryData","createMeshFromData","transformationMatrix","FromArray","setPivotMatrix","scaling","z","flipFaces","x","w","diffuseColor","alpha","vertexDataForBabylon","applyToMesh","ɵɵinject","NgZone","factory","ɵfac","providedIn","open","event","file","target","files","value","reader","FileReader","onload","_ref","Uint8Array","result","_x","apply","arguments","readAsArrayBuffer","MenuComponent_Template","ɵɵtext","ɵɵlistener","MenuComponent_Template_input_change_12_listener","$event","ɵɵadvance","ɵɵproperty","_r0","DocumentMock","Document","StorageMock","clear","getItem","key","index","removeItem","setItem","WindowMock","Window","localStorage","sessionStorage","getWindow","windowObject","localStore","packageInfo","environment","production","version","enableProdMode","ViewEncapsulation","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","defaultEncapsulation","None","catch","err","console","log"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}